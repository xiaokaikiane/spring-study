<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd"
default-autowire="byName">
    <!-- 创建一个字符串对象，对象名为myName，通过new String("小比特")生成对象 -->
    <bean id="myName" class="java.lang.String">
        <constructor-arg value="小比特" />
    </bean>

    <!-- 无参的构造方法创建对象 ctrl+/键注释代码-->
    <bean id="duck1" class="frank.ioc.Duck">
        <constructor-arg name="name" ref="myName" />
        <constructor-arg name="age" value="20" />
<!--        <property name="name" ref="myName" />-->
<!--        <property name="age" value="20" />-->
    </bean>
    <bean id="duck2" class="frank.ioc.Duck">
        <constructor-arg value="LadyGaga" />
<!--        <property name="name" value="LadyGaga" />-->
        <property name="age" value="30" />
    </bean>

    <!-- 实例的工厂方法创建bean对象 -->
    <bean id="duckFactory" class="frank.ioc.DuckFactory" />
    <bean id="duck5" class="frank.ioc.Duck" factory-bean="duckFactory" factory-method="create" />

    <!-- 静态工厂方法创建Bean对象，类型是方法的返回值类型 -->
    <bean id="duck6" class="frank.ioc.DuckFactory" factory-method="create2" />

    <bean id="duckShop" class="frank.ioc.DuckShop" scope="prototype">
        <property name="name" value="比特烤鸭店" />
        <property name="ducks">
            <list>
                <ref bean="duck1" />
                <ref bean="duck2" />
            </list>
        </property>
    </bean>
    <bean id="lifeCycle" class="frank.ioc.Lifecycle" init-method="init"
          destroy-method="destroy2" />

    <!-- 扫描base-package的包，所有子包都会进行扫描：包含Spring注解的类：
            1.@Controller：做前端请求处理的类
            2.@Service：业务处理的类
            3.@Component：宽泛的概念，一般指组件
            4.@Repository：一般数据操作的类
            5.@Configuration 配置类
    -->
    <context:component-scan base-package="frank.scan" />
</beans>